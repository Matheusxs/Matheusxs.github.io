{"version":3,"sources":["./src/app/Servicos/auth.service.ts","./src/app/Componetes/login/login.component.ts","./src/app/Componetes/login/login.component.html","./src/environments/environment.ts","./src/app/Componetes/home/home.component.ts","./src/app/Componetes/home/home.component.html","./src/app/Componetes/menu/menu.component.ts","./src/app/Componetes/menu/menu.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/Componetes/cadastro/cadastro.component.ts","./src/app/Componetes/cadastro/cadastro.component.html","./src/app/Componetes/validar-email/validar-email.component.ts","./src/app/Componetes/validar-email/validar-email.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Injectable, NgZone } from '@angular/core';\nimport * as firebase from 'firebase/app';\nimport { AngularFireAuth } from \"@angular/fire/auth\";\nimport { AngularFirestore, AngularFirestoreDocument } from '@angular/fire/firestore';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  userData: any; // Save logged in user data\n  userReady = false;\n  constructor(public afs: AngularFirestore,\n              public afAuth: AngularFireAuth,\n              private router: Router,  \n              private ngZone: NgZone) {\n    /* Saving user data in localstorage when \n    logged in and setting up null when logged out */\n    this.afAuth.authState.subscribe(user => {\n      if (user) {\n        this.userData = user;\n        localStorage.setItem('user', JSON.stringify(this.userData));\n        JSON.parse(localStorage.getItem('user')!);\n      } else {\n        localStorage.setItem('user', '{}');\n        JSON.parse(localStorage.getItem('user')!);\n      }\n    });\n    \n  }\n\n  // Sign in with email/password\n  SignIn(email: string, password: string) {\n    return this.afAuth.signInWithEmailAndPassword(email, password)\n      .then((result) => {\n        this.ngZone.run(() => {\n          this.router.navigate(['']);\n        });\n\n        let user_cache = JSON.parse(localStorage.getItem('user')!);\n        user_cache.emailVerified = result.user?.emailVerified;\n        localStorage.setItem('user', JSON.stringify(user_cache));\n        this.userReady = true;\n        this.SetUserData(result.user, '');\n      }).catch((error) => {\n        window.alert(error.message)\n      })\n  }\n  // Sign up with email/password\n  SignUp(email: string, password: string, nome: string) {\n    return this.afAuth.createUserWithEmailAndPassword(email, password)\n      .then((result) => {\n        /* Call the SendVerificaitonMail() function when new user sign \n        up and returns promise */\n        this.userReady = true;\n        this.SendVerificationMail();\n        this.SetUserData(result.user, nome);\n      }).catch((error) => {\n        window.alert(error.message);\n      })\n  }\n\n  // Send email verfificaiton when new user sign up\n  SendVerificationMail() {\n    return this.afAuth.currentUser.then(u =>{if(u != undefined)u.sendEmailVerification()})\n    .then(() => {\n      this.router.navigate(['validar-email']);\n    });\n  }\n\n  // Reset Forggot password\n  ForgotPassword(passwordResetEmail: string) {\n    return this.afAuth.sendPasswordResetEmail(passwordResetEmail)\n    .then(() => {\n      window.alert('Enviamos um email para a troca da senha para o endereço solicitado');\n    }).catch((error) => {\n      window.alert(error)\n    })\n  }\n\n  // Returns true when user is looged in and email is verified\n  get isLoggedIn(): boolean {\n    const user = JSON.parse(localStorage.getItem('user')!);\n    //console.log(1, user !== null);\n    //console.log(2, user.emailVerified !== false);\n    //console.log(3, user.emailVerified !== undefined);\n    //console.log(4, user !== undefined);\n    return (user !== null && user.emailVerified !== false && user.emailVerified !== undefined && user !== undefined) ? true : false;\n  }\n\n  // Sign in with Google\n  GoogleAuth() {\n    return this.AuthLogin(new firebase.default.auth.GoogleAuthProvider());\n  }\n\n  // Auth logic to run auth providers\n  AuthLogin(provider: any) {\n    return this.afAuth.signInWithPopup(provider)\n    .then((result) => {\n      this.ngZone.run(() => {\n          this.router.navigate(['']);\n      })\n      this.userReady = true;\n      this.SetUserData(result.user, '');\n    }).catch((error) => {\n      window.alert(error)\n    })\n  }\n\n  /* Setting up user data when sign in with username/password, \n  sign up with username/password and sign in with social auth  \n  provider in Firestore database using AngularFirestore + AngularFirestoreDocument service */\n  SetUserData(user: any, nome: string) {\n    const userRef: AngularFirestoreDocument<any> = this.afs.doc(`Users/${user.uid}`);\n\n    const userData = {\n      id: user.uid,\n      email: user.email,\n      nome: user.displayName,\n      email_verificado: user.emailVerified,\n    }\n\n    if(nome != ''){\n      userData.nome = nome;\n    }\n    return userRef.set(userData, {\n      merge: true\n    });\n  }\n\n  // Sign out \n  SignOut() {\n    return this.afAuth.signOut().then(() => {\n      localStorage.removeItem('user');\n      this.userData = null;\n      localStorage.clear();\n      this.userReady = false;\n      this.router.navigate(['login']);\n    })\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/Servicos/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor(public authService: AuthService,\n              private router: Router) { }\n\n  email: string = \"\";\n  senha: string = \"\";\n\n  ngOnInit(): void {\n  }\n  irParaCadastro(){\n    this.router.navigate([\"cadastro\"]);\n  } \n  login(){\n    this.authService.SignIn(this.email, this.senha);\n  }\n}\n","<p-card [style]=\"{'width': '25rem', 'margin-bottom': '2em', 'margin': '0 auto', 'text-align': 'center'}\">\n    <ng-template pTemplate=\"header\">\n        <br>\n        <b>\n            <h2>\n                Login\n            </h2>\n        </b>\n    </ng-template>\n\n    <span class=\"p-float-label\">\n        <input id=\"email-input\" [style]=\"{'width': '100%'}\" [(ngModel)]=\"email\" type=\"text\" pInputText> \n        <label for=\"email-input\">Email</label>\n    </span>\n    <br>    \n    <span class=\"p-float-label\">\n        <input id=\"senha-input\" [style]=\"{'width': '100%'}\" [(ngModel)]=\"senha\" [feedback]=false type=\"password\" pPassword> \n        <label for=\"senha-input\">Senha</label>\n    </span>\n    <br>\n    <button pButton type=\"button\" label=\"Login\" (click)=\"login()\"  [style]=\"{'width': '100%'}\" ></button>\n    <br>\n    <br>\n    <button pButton type=\"button\" label=\"Login com Google\" icon=\"pi pi-google\" class=\"p-button-outlined p-button-rounded p-button-info\" (click)=\"authService.GoogleAuth()\" [style]=\"{'width': '100%'}\" ></button>\n    <br>\n    <br>\n    <button pButton type=\"button\" label=\"Cadastrar\" class=\"p-button-outlined p-button-primary\" (click)=\"irParaCadastro()\" [style]=\"{'width': '100%'}\" ></button>\n</p-card>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebaseconfig:{\n    apiKey: \"AIzaSyDP4PI-jYkt8DOgncxUqO6hDqyqkWLu2tk\",\n    authDomain: \"sistema-seguranca-trabalho.firebaseapp.com\",\n    projectId: \"sistema-seguranca-trabalho\",\n    storageBucket: \"sistema-seguranca-trabalho.appspot.com\",\n    messagingSenderId: \"1057029791819\",\n    appId: \"1:1057029791819:web:c477761a85e5f8128f2dce\",\n    measurementId: \"G-QJH1CTRT39\"\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/Servicos/auth.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(private authService: AuthService, \n              private router: Router) {\n\n   }\n\n  ngOnInit(): void {\n    if(!this.authService.userData && !this.authService.userReady){ \n      this.router.navigate([\"login\"]);\n    }\n  }\n\n}\n","<app-menu></app-menu>","import { Component, OnInit } from '@angular/core';\nimport {MenuItem} from 'primeng/api';\nimport { AuthService } from 'src/app/Servicos/auth.service';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.css']\n})\n\nexport class MenuComponent implements OnInit {\n  items: MenuItem[] = [];\n  constructor(public authService: AuthService) { }\n\n  ngOnInit(): void {\n    this.items = [\n      {\n          label: 'Área do aluno',\n          icon: 'pi pi-fw pi-pencil'\n      },\n      {\n          label: 'Informações Gerais',\n          icon: 'pi pi-fw pi-pencil'\n      }\n    ];\n  }\n}\n","<p-menubar [model]=\"items\">\n    <ng-template pTemplate=\"end\">\n        <p-button label =\"Sair\" (click)=\"authService.SignOut()\" ></p-button>\n    </ng-template>\n</p-menubar>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Sistema-Seguranca-Trabalho';\n}\n","<router-outlet></router-outlet>","//Modulos do Angular\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AppRoutingModule } from './app-routing.module';\nimport { FormsModule } from '@angular/forms';\n\n//Modulos do Firebase\nimport { AngularFireModule } from '@angular/fire' ;\nimport { environment } from 'src/environments/environment';\nimport { AngularFireAuthModule } from \"@angular/fire/auth\";\n\n//Modolos do Primeng\nimport {ButtonModule} from 'primeng/button';\nimport {InputTextModule} from 'primeng/inputtext';\nimport {CardModule} from 'primeng/card';\nimport {PasswordModule} from 'primeng/password';\nimport {MenubarModule} from 'primeng/menubar';\n\n\n//Componetes do Sistema\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './Componetes/login/login.component';\nimport { CadastroComponent } from './Componetes/cadastro/cadastro.component';\nimport { ValidarEmailComponent } from './Componetes/validar-email/validar-email.component';\nimport { MenuComponent } from './Componetes/menu/menu.component';\nimport { HomeComponent } from './Componetes/home/home.component';\n\nconst routes: Routes = [\n  {path: 'login', component: LoginComponent},\n  {path: 'cadastro', component: CadastroComponent},\n  {path: '', component: HomeComponent},\n  {path: 'validar-email', component: ValidarEmailComponent}\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    CadastroComponent,\n    ValidarEmailComponent,\n    MenuComponent,\n    HomeComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    RouterModule.forRoot(routes),\n    FormsModule,\n    AngularFireModule.initializeApp(environment.firebaseconfig),\n    AngularFireAuthModule,\n    \n    ButtonModule,\n    InputTextModule,\n    CardModule,\n    PasswordModule,\n    MenubarModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/Servicos/auth.service';\n\n@Component({\n  selector: 'app-cadastro',\n  templateUrl: './cadastro.component.html',\n  styleUrls: ['./cadastro.component.css']\n})\nexport class CadastroComponent implements OnInit {\n\n  constructor(public authService: AuthService) { }\n  nome: string = \"\";\n  email: string = \"\";\n\n  senha: string = \"\";\n  re_senha: string = \"\";\n\n  ngOnInit(): void {\n  }\n  cadastrar(){\n    if(this.senha == this.re_senha){\n      this.authService.SignUp(this.email, this.senha, this.nome);\n    }\n  }\n}\n","<p-card [style]=\"{'width': '25rem', 'margin-bottom': '2em', 'margin': '0 auto', 'text-align': 'center'}\">\n    <ng-template pTemplate=\"header\">\n        <br>\n        <b>\n            <h2>\n                Cadastro\n            </h2>\n        </b>\n    </ng-template>\n    <span class=\"p-float-label\">\n        <input id=\"nome-input\" [style]=\"{'width': '100%'}\" [(ngModel)]=\"nome\" type=\"text\" pInputText> \n        <label for=\"nome-input\">Nome</label>\n    </span>\n    <br>\n    <span class=\"p-float-label\">\n        <input id=\"email-input\" [style]=\"{'width': '100%'}\" [(ngModel)]=\"email\" type=\"text\" pInputText> \n        <label for=\"email-input\">Email</label>\n    </span>\n    <br>    \n    <span class=\"p-float-label\">\n        <input id=\"senha-input\" [style]=\"{'width': '100%'}\" [(ngModel)]=\"senha\" type=\"password\" pPassword> \n        <label for=\"senha-input\">Senha</label>\n    </span>\n    <br>\n    <span class=\"p-float-label\">\n        <input id=\"re-senha-input\" [style]=\"{'width': '100%'}\" [(ngModel)]=\"re_senha\" [feedback]=false type=\"password\" pPassword> \n        <label for=\"re-senha-input\">Repetir Senha</label>\n    </span>\n    <br>\n    <button pButton type=\"button\" label=\"Cadastrar\" (click)=\"cadastrar()\" [style]=\"{'width': '100%'}\" ></button>\n    <br>\n    <br>\n    <button pButton type=\"button\" label=\"Cadastrar com Google\" icon=\"pi pi-google\" class=\"p-button-outlined p-button-rounded p-button-info\" (click)=\"authService.GoogleAuth()\" [style]=\"{'width': '100%'}\" ></button>\n    <br>\n    <br>\n    <a routerLink=\"/login\" routerLinkActive=\"active\" >Voltar Para Login</a>\n\n</p-card>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/Servicos/auth.service';\n\n@Component({\n  selector: 'app-validar-email',\n  templateUrl: './validar-email.component.html',\n  styleUrls: ['./validar-email.component.css']\n})\nexport class ValidarEmailComponent implements OnInit {\n\n  constructor(public authService: AuthService){\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p-card [style]=\"{'width': '25rem', 'margin-bottom': '2em', 'margin': '0 auto', 'text-align': 'center'}\">\n    <ng-template pTemplate=\"header\">\n        <br>\n        <b>\n            <h2>\n                Validar Email\n            </h2>\n        </b>\n    </ng-template>\n    <div *ngIf=\"authService.userData as user\">\n        <br>  \n        <p>\n            Agora que você realizou o cadastro em nosso sistema, Por favor valide seu email no endereço cadastrado abaixo.\n        </p>  \n        <br>\n        <br>\n        <button pButton type=\"button\" label=\"{{user.email}}\" class=\"p-button-outlined p-button-rounded p-button-info\" [style]=\"{'width': '100%'}\" ></button>\n        <br>\n        <br>\n        <p>\n            Caso não tenha recebido o email de validação, Clique no botão acima.\n        </p>\n    </div>\n</p-card>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}